@model IEnumerable<IGrouping<Tuple<DateTime, TimeSpan>, Pet_Management_System.Models.OrderedProduct>>
@{
    ViewBag.Title = "Adoption History";
}

<style>
    .container {
        max-width: 1200px; /* Maximum width of the container */
        margin: auto; /* Center the container */
        padding: 20px;
    }

    .card {
        background-color: #fff; /* White background for the cards */
        border: 1px solid #ddd; /* Light grey border */
        border-radius: 8px; /* Rounded corners */
        margin-top: 20px; /* Space above each card */
        box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Subtle shadow for depth */
    }

    .card-body, .card-footer {
        padding: 20px; /* Padding inside the card */
    }

    .card-title {
        font-size: 24px; /* Larger font size for the card title */
        color: #333; /* Dark grey color for text */
        margin-bottom: 10px; /* Space below the title */
    }

    .card-subtitle {
        font-size: 16px;
        color: #666; /* Medium grey for subtitles */
    }

    .card-text {
        font-size: 14px;
        color: #555; /* Slightly darker text color for readability */
    }

    .card img {
        border-radius: 50%; /* Circular images */
        margin-right: 10px; /* Space to the right of the image */
    }

    /* Flex layout for items within card footer */
    .card-footer {
        display: flex;
        justify-content: space-between; /* Distribute space evenly */
        align-items: center; /* Vertically align items */
        background-color: #f8f8f8; /* Slightly different background to distinguish footer */
    }

    .btn-outline-dark {
        border: 1px solid #444; /* Dark border for buttons */
        background-color: transparent; /* Transparent background */
        color: #444; /* Dark text color matching the border */
        padding: 10px 20px; /* Padding inside the button */
        border-radius: 5px; /* Rounded corners for the button */
        cursor: pointer; /* Pointer cursor on hover */
    }

        .btn-outline-dark:hover {
            background-color: #ddd; /* Light grey background on hover */
        }

    /* Styles for labels and spans within the cards */
    label {
        font-weight: bold; /* Bold font for labels */
    }

    span {
        color: orange; /* Orange color for emphasis */
    }

</style>

        <h2>My Adoptions</h2>


        @foreach (var group in Model)
        {
            <div class="container">
                <div class="card mt-5 border-5 pt-2 active pb-0 px-3">
                    <div class="card-body ">
                        <div class="row">
                            <div class="col-12 ">
                                <h4 class="card-title "><b>  Date: @group.Key.Item1.ToLongDateString()</b></h4>

                            </div>
                            @foreach (var item in group)
                            {
                                <div class="row">
                                    <div class="col">
                                        <div class="card">
                                            <div class="card-body">
                                                <h6 class="card-subtitle mb-2 text-muted">
                                                    <p class="card-text text-muted small">
                                                        <a href="#" onclick="showBiggerImage('@item.Product.picture')">
                                                            <img src="~/assets/images/@item.Product.picture" class="mr-1" width="50" height="50" id="star">
                                                            <span class="vl mr-2 ml-0"></span>
                                                        </a>

                                                        <label for="price">Pet Name:</label>
                                                        <span id="priceValue" style="padding-left: 1%; color: blue; ">@item.Product.Name</span>

                                                       

                                                        <label for="price" style="padding-left: 10%; margin-left: -8px;">Cost:</label>
                                                        @{ double tot = (double)item.Product.Price * item.Quantity;}
                                                        <span id="priceValue" style="padding-left: 1%; color: blue;">R @tot</span>
                                                    </p>
                                                </h6>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }




                        </div>
                    </div>
                    <div class="card-footer bg-white px-0">
                        <div class="row">
                            <div style="display: flex; align-items: center; justify-content: space-between; width: 100%;">
                                <div style="padding-right:2%;width:fit-content"  >
                                    <label for="shippingMethod" style="width:fit-content">Pet Type:</label>
                                    <span id="shippingMethodValue" style="padding-left: 5px; color: blue;">@group.FirstOrDefault().Product.Category.Name</span>
                                </div>
                                <div style="padding-right:2%;width:fit-content">
                                    <label for="deliveryFee">Delivery fee:</label>
                                    <span id="deliveryFeeValue" style="padding-left: 5px; color: blue;"> @group.FirstOrDefault().CustomerOrder.deliveryFee.ToString("R0.00")</span>
                                </div>
                                <div style="padding-right:2%;width:fit-content">
                                    <label for="basicCost" style="width:fit-content" >Basic Cost:</label>
                                    <span id="basicCostValue" style="padding-left: 5px; color: blue;"> @group.FirstOrDefault().CustomerOrder.Amount.ToString("R0.00")</span>
                                </div>
                                <div style="padding-right:2%;width:fit-content">
                                    <label for="totalCost">Total Cost:</label>
                                    @{ double fTot = (double)group.FirstOrDefault().CustomerOrder.Amount + @group.FirstOrDefault().CustomerOrder.deliveryFee;}
                                    <span id="totalCostValue" style="padding-left: 5px; color: blue;"> @fTot.ToString("R0.00")</span>
                                </div>
                                <button class="btn btn-outline-dark" style="margin-left: 20px;" onclick="location.href='@Url.Action(actionName: "TrackOrder", controllerName: "OrderedProducts", routeValues: new {id = group.FirstOrDefault().CustomerOrderId })'">Track Adoption</button>
                                @if (group.FirstOrDefault().CustomerOrder.Status == "Placed")
                                {
                                    <button class="btn btn-outline-dark" style="margin-left: 20px;" onclick="location.href='@Url.Action(actionName: "Cancel", controllerName: "OrderedProducts", routeValues: new {id = group.FirstOrDefault().CustomerOrderId })'">Cancel</button>
                                }
                                @*else if (group.FirstOrDefault().CustomerOrder.Status == "Order Recived")
                                {
                                    <button class="btn btn-outline-dark" style="margin-left: 20px;" onclick="Return(@group.FirstOrDefault().CustomerOrderId)">Return Order</button>

                                }*@


                            </div>
                        </div>
                    </div>








                </div>








            </div>
        }
    
<script>
    function Return(id) {
        var reason = prompt("Please enter reason for return:");
        if (reason !== null) {

        alertify.confirm('Return Order', 'Are you sure you want to request a reuturn for this order with reason: ' + reason, function () {

            window.location.href = '@Url.Action("ReturnOrder", "OrderedProducts")/' + id + '?reason=' + encodeURIComponent(reason);
        }, null);
    }
}








</script>